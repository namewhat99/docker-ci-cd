name: CI / CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code # 코드 체크아웃 -> master 저장소로 부터 코드를 내려받는다
        uses: actions/checkout@v2

      - name: Set up JDK 17 # Java application 을 실행하는데 필요한 환경 설정 -
        uses: actions/setup-java@v3 # Java 17 환경에서 빌드 , 테스트를 할 수 있게 해준다.
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle # gradle 로 테스트 없이 빌드
        run: ./gradlew build -x test

      - name: Build Docker image # 도커 이미지 빌드
        run: docker build -t leegh963/docker .

      - name: docker login # 도커 로그인
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        
      - name: Push Docker image # 도커 이미지를 도커 허브로 푸시
        run: docker push leegh963/docker

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.AWS_INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to AWS EC2
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_INSTANCE_IP }} << 'EOF'
            docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
            docker pull leegh963/docker
            docker stop $(docker ps -a -q)
            docker run -d -p 8080:8080 leegh963/docker
          EOF
